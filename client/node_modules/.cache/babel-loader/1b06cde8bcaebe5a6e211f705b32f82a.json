{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\JavaScript\\\\perfect-meal\\\\client\\\\src\\\\context\\\\FoodState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport FoodContext from \"./foodContext\";\nimport FoodReducer from \"./foodReducer\";\n\nconst FoodState = props => {\n  const initialState = {\n    name: \"\",\n    macro: []\n  };\n  const [state, dispatch] = useReducer(FoodReducer, initialState); //search food\n\n  const searchfood = async text => {\n    //for now text is \"rice\";\n    const res = await axios.get(`https://api.nal.usda.gov/fdc/v1/foods/search?api_key=IckhwEjFyp6BaAC0oonKEpKjTbBjgG8b5EqBggnm&query=${text}`); //function to get only the needed items from the foodnutrients\n\n    let tmp = res.data.foods[0].foodNutrients;\n    let result = {\n      name: text,\n      Protien: tmp.filter(m => m.nutrientId === 1003)[0].value,\n      Fat: tmp.filter(m => m.nutrientId === 1004)[0].value,\n      Carbohydrate: result.filter(m => m.nutrientId === 1005)[0].value,\n      Calories: result.filter(m => m.nutrientId === 1008)[0].value\n    };\n    console.log(tmp);\n    dispatch({\n      type: \"SEARCH_FOOD\",\n      payload: result\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FoodContext.Provider, {\n    value: {\n      name: state.name,\n      macro: state.macro,\n      searchfood\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, props.children));\n};\n\nexport default FoodState;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/JavaScript/perfect-meal/client/src/context/FoodState.js"],"names":["React","useReducer","axios","FoodContext","FoodReducer","FoodState","props","initialState","name","macro","state","dispatch","searchfood","text","res","get","tmp","data","foods","foodNutrients","result","Protien","filter","m","nutrientId","value","Fat","Carbohydrate","Calories","console","log","type","payload","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAE,EADa;AAEnBC,IAAAA,KAAK,EAAE;AAFY,GAArB;AAIA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACG,WAAD,EAAcG,YAAd,CAApC,CAL2B,CAM3B;;AACA,QAAMK,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACjC;AACA,UAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CACf,uGAAsGF,IAAK,EAD5F,CAAlB,CAFiC,CAKjC;;AACA,QAAIG,GAAG,GAAGF,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBC,aAA5B;AACA,QAAIC,MAAM,GAAG;AACXZ,MAAAA,IAAI,EAAEK,IADK;AAEXQ,MAAAA,OAAO,EAAEL,GAAG,CAACM,MAAJ,CAAYC,CAAD,IAAOA,CAAC,CAACC,UAAF,KAAiB,IAAnC,EAAyC,CAAzC,EAA4CC,KAF1C;AAGXC,MAAAA,GAAG,EAAEV,GAAG,CAACM,MAAJ,CAAYC,CAAD,IAAOA,CAAC,CAACC,UAAF,KAAiB,IAAnC,EAAyC,CAAzC,EAA4CC,KAHtC;AAIXE,MAAAA,YAAY,EAAEP,MAAM,CAACE,MAAP,CAAeC,CAAD,IAAOA,CAAC,CAACC,UAAF,KAAiB,IAAtC,EAA4C,CAA5C,EAA+CC,KAJlD;AAKXG,MAAAA,QAAQ,EAAER,MAAM,CAACE,MAAP,CAAeC,CAAD,IAAOA,CAAC,CAACC,UAAF,KAAiB,IAAtC,EAA4C,CAA5C,EAA+CC;AAL9C,KAAb;AAOAI,IAAAA,OAAO,CAACC,GAAR,CAAYd,GAAZ;AACAL,IAAAA,QAAQ,CAAC;AACPoB,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAEZ;AAFF,KAAD,CAAR;AAID,GAnBD;;AAqBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLZ,MAAAA,IAAI,EAAEE,KAAK,CAACF,IADP;AAELC,MAAAA,KAAK,EAAEC,KAAK,CAACD,KAFR;AAGLG,MAAAA;AAHK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGN,KAAK,CAAC2B,QANT,CADF,CADF;AAYD,CAxCD;;AA0CA,eAAe5B,SAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport FoodContext from \"./foodContext\";\r\nimport FoodReducer from \"./foodReducer\";\r\n\r\nconst FoodState = (props) => {\r\n  const initialState = {\r\n    name: \"\",\r\n    macro: [],\r\n  };\r\n  const [state, dispatch] = useReducer(FoodReducer, initialState);\r\n  //search food\r\n  const searchfood = async (text) => {\r\n    //for now text is \"rice\";\r\n    const res = await axios.get(\r\n      `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=IckhwEjFyp6BaAC0oonKEpKjTbBjgG8b5EqBggnm&query=${text}`\r\n    );\r\n    //function to get only the needed items from the foodnutrients\r\n    let tmp = res.data.foods[0].foodNutrients;\r\n    let result = {\r\n      name: text,\r\n      Protien: tmp.filter((m) => m.nutrientId === 1003)[0].value,\r\n      Fat: tmp.filter((m) => m.nutrientId === 1004)[0].value,\r\n      Carbohydrate: result.filter((m) => m.nutrientId === 1005)[0].value,\r\n      Calories: result.filter((m) => m.nutrientId === 1008)[0].value,\r\n    };\r\n    console.log(tmp);\r\n    dispatch({\r\n      type: \"SEARCH_FOOD\",\r\n      payload: result,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FoodContext.Provider\r\n        value={{\r\n          name: state.name,\r\n          macro: state.macro,\r\n          searchfood,\r\n        }}>\r\n        {props.children}\r\n      </FoodContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FoodState;\r\n"]},"metadata":{},"sourceType":"module"}