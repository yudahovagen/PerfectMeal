{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\JavaScript\\\\perfect-meal\\\\client\\\\src\\\\components\\\\Food\\\\plate.js\";\nimport React, { useContext, useState } from \"react\";\nimport PlateItems from \"./plateItems\";\nimport FoodContext from \"../../context/foodContext\";\nimport { Table } from \"react-bootstrap\";\n\nconst Plate = () => {\n  const foodContext = useContext(FoodContext);\n  const {\n    macro,\n    name\n  } = foodContext;\n  const [plate, setPlate] = useState([]);\n\n  const addFood = () => {\n    let tmp = [];\n    macro.map(e => {\n      if (e.nutrientId === 1003) {\n        tmp.push({\n          Protein: e.value\n        });\n      } else if (e.nutrientId === 1004) {\n        tmp.push({\n          Fat: e.value\n        });\n      } else if (e.nutrientId === 1005) {\n        tmp.push({\n          Carbs: e.value\n        });\n      } else if (e.nutrientId === 1008) {\n        tmp.push({\n          Calories: e.value\n        });\n      }\n    });\n    setPlate([...plate, tmp]);\n    console.log(`plate object : ${plate}`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, macro.length ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addFood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }\n  }, \"add to plate\") : null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"my plate:\"), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Protein\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Fat\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Carbs\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Calories\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, plate.map(plate => /*#__PURE__*/React.createElement(PlateItems, {\n    key: plate.nutrientId,\n    plate: plate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Plate;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/JavaScript/perfect-meal/client/src/components/Food/plate.js"],"names":["React","useContext","useState","PlateItems","FoodContext","Table","Plate","foodContext","macro","name","plate","setPlate","addFood","tmp","map","e","nutrientId","push","Protein","value","Fat","Carbs","Calories","console","log","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,KAAT,QAAsB,iBAAtB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,WAAW,GAAGN,UAAU,CAACG,WAAD,CAA9B;AACA,QAAM;AAAEI,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBF,WAAxB;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMU,OAAO,GAAG,MAAM;AACpB,QAAIC,GAAG,GAAG,EAAV;AACAL,IAAAA,KAAK,CAACM,GAAN,CAAWC,CAAD,IAAO;AACf,UAAIA,CAAC,CAACC,UAAF,KAAiB,IAArB,EAA2B;AACzBH,QAAAA,GAAG,CAACI,IAAJ,CAAS;AAAEC,UAAAA,OAAO,EAAEH,CAAC,CAACI;AAAb,SAAT;AACD,OAFD,MAEO,IAAIJ,CAAC,CAACC,UAAF,KAAiB,IAArB,EAA2B;AAChCH,QAAAA,GAAG,CAACI,IAAJ,CAAS;AAAEG,UAAAA,GAAG,EAAEL,CAAC,CAACI;AAAT,SAAT;AACD,OAFM,MAEA,IAAIJ,CAAC,CAACC,UAAF,KAAiB,IAArB,EAA2B;AAChCH,QAAAA,GAAG,CAACI,IAAJ,CAAS;AAAEI,UAAAA,KAAK,EAAEN,CAAC,CAACI;AAAX,SAAT;AACD,OAFM,MAEA,IAAIJ,CAAC,CAACC,UAAF,KAAiB,IAArB,EAA2B;AAChCH,QAAAA,GAAG,CAACI,IAAJ,CAAS;AAAEK,UAAAA,QAAQ,EAAEP,CAAC,CAACI;AAAd,SAAT;AACD;AACF,KAVD;AAWAR,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWG,GAAX,CAAD,CAAR;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiBd,KAAM,EAApC;AACD,GAfD;;AAiBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACiB,MAAN,gBAAe;AAAQ,IAAA,OAAO,EAAEb,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAf,GAAiE,IADpE,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CADF,CADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACI,GAAN,CAAWJ,KAAD,iBACT,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEA,KAAK,CAACM,UAAvB;AAAmC,IAAA,KAAK,EAAEN,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAVF,CAHF,CADF;AAsBD,CA5CD;;AA8CA,eAAeJ,KAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport PlateItems from \"./plateItems\";\r\nimport FoodContext from \"../../context/foodContext\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nconst Plate = () => {\r\n  const foodContext = useContext(FoodContext);\r\n  const { macro, name } = foodContext;\r\n  const [plate, setPlate] = useState([]);\r\n\r\n  const addFood = () => {\r\n    let tmp = [];\r\n    macro.map((e) => {\r\n      if (e.nutrientId === 1003) {\r\n        tmp.push({ Protein: e.value });\r\n      } else if (e.nutrientId === 1004) {\r\n        tmp.push({ Fat: e.value });\r\n      } else if (e.nutrientId === 1005) {\r\n        tmp.push({ Carbs: e.value });\r\n      } else if (e.nutrientId === 1008) {\r\n        tmp.push({ Calories: e.value });\r\n      }\r\n    });\r\n    setPlate([...plate, tmp]);\r\n    console.log(`plate object : ${plate}`);\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      {macro.length ? <button onClick={addFood}>add to plate</button> : null}\r\n      <h2>my plate:</h2>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Protein</th>\r\n            <th>Fat</th>\r\n            <th>Carbs</th>\r\n            <th>Calories</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {plate.map((plate) => (\r\n            <PlateItems key={plate.nutrientId} plate={plate} />\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Plate;\r\n"]},"metadata":{},"sourceType":"module"}